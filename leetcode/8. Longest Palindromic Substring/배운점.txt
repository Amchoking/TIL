5. Longest Palindromic Substring
Problem:
Given a string s, return the longest palindromic substring in s.

문제:
주어진 문자열 s에 대해 가장 긴 대칭의 부분문자열을 리턴하라.

많은 해결 방법들이 있겠지만 나는 다이나믹 프로그래밍 방법으로 이 문제를 풀었다.
우선 s의 길이 * s의 길이에 해당하는 이차원 배열을 만들고,
matrix[문자열의 시작지점][문자열의 끝지점] 의 값을 대칭을 이루면 True 대칭이 아니면 False를 넣는다.
반복해가며 matrix값이 True이고 시작지점의 전값과 끝지점의 후값을 비교하여 같은경우 matrix[시작지점-1][끝지점+1]의 값을 True로 만들고 반복한다.
결국 시작지점과 끝지점의 차이가 부분 문자열의 길이가 되며 이 값이 가장 큰경우의 문자열을 리턴하면 된다.

끝나고 생각해보니 시간복잡도와 공간복잡도 모두 O(n)이었는데, 공간복잡도는 충분히 줄일 수 있을 것 같았다.
대칭은 중간에서 부터 같은값이 확장되어 나가는 것이므로, 문자열 s의 각각의 문자, 그리고 잇다른 2개의 문자들에 대하여 좌우로 확장시켜 나가며,
확장된 좌우값들의 차이가 가장 큰 경우를 저장하여 리턴하면 공간복잡도 O(1)이 가능할 것이라고 생각된다.
